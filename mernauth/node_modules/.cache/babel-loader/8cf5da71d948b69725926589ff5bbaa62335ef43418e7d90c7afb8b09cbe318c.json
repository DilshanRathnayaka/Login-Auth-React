{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nimes\\\\OneDrive\\\\Desktop\\\\Project\\\\Auth\\\\MERN\\\\mernauth\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport Message from './components/Message';\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Protected from './Protected';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setisLoggedIn] = useState(true);\n  const [isnotLoggedIn, setisnotLoggedIn] = useState(false);\n  const LoginRoute = async () => {\n    try {\n      const res = await fetch('/auth', {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      if (res.status === 200) {\n        setisLoggedIn(false);\n        setisnotLoggedIn(true);\n      }\n      if (res.status === 401) {\n        setisLoggedIn(true);\n        setisnotLoggedIn(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    LoginRoute();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Login\",\n        element: /*#__PURE__*/_jsxDEV(Protected, {\n          isnotLoggedIn: isnotLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Register\",\n        element: /*#__PURE__*/_jsxDEV(Protected, {\n          isnotLoggedIn: isnotLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Logout\",\n        element: /*#__PURE__*/_jsxDEV(Protected, {\n          isLoggedIn: isLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Protected, {\n          isLoggedIn: isLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Message\",\n        element: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"xvhm49vOj4i7Yz3SqJ2O+VT4BzY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Route","Routes","Dashboard","Footer","Home","Login","Logout","Message","Navbar","Register","Protected","App","isLoggedIn","setisLoggedIn","isnotLoggedIn","setisnotLoggedIn","LoginRoute","res","fetch","method","headers","Accept","credentials","status","error","console","log"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Auth/MERN/mernauth/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom'\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport Message from './components/Message';\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Protected from './Protected';\n\n\n\n\nfunction App() {\n  const [isLoggedIn, setisLoggedIn] = useState(true);\n  const [isnotLoggedIn, setisnotLoggedIn] = useState(false);\n  \n  const LoginRoute = async () => {\n    try {\n      const res = await fetch('/auth', {\n        method : \"GET\",\n        headers : {\n          Accept : \"application/json\",\n          \"Content-Type\" : \"application/json\"\n        },\n        credentials : \"include\"\n      });\n\n      if(res.status === 200){\n        setisLoggedIn(false)\n        setisnotLoggedIn(true)\n      }if(res.status ===401){\n        setisLoggedIn(true)\n        setisnotLoggedIn(false)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    LoginRoute();\n  }, []);\n\n  return (\n    <><Navbar isLoggedIn={isLoggedIn} /><Routes>\n      <Route path='/' element={<Home />}></Route>\n\n      <Route\n        path=\"/Login\"\n        element={\n          <Protected isnotLoggedIn={isnotLoggedIn}>\n            <Login />\n          </Protected>\n        }\n      />\n\n<Route\n        path=\"/Register\"\n        element={\n          <Protected isnotLoggedIn={isnotLoggedIn} >\n            <Register />\n          </Protected>\n        }\n      />\n\n      <Route\n        path=\"/Logout\"\n        element={\n          <Protected isLoggedIn={isLoggedIn} >\n            <Logout />\n          </Protected>\n        }\n      />\n\n      <Route\n        path=\"/Dashboard\"\n        element={\n          <Protected isLoggedIn={isLoggedIn}>\n            <Dashboard />\n          </Protected>\n        }\n      />\n<Route path='/Message' element={<Message/>}/>\n\n\n    </Routes><Footer/></>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}